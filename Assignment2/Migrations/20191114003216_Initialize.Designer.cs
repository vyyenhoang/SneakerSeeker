// <auto-generated />
using System;
using Assignment2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Assignment2.Migrations
{
    [DbContext(typeof(Assignment2Context))]
    [Migration("20191114003216_Initialize")]
    partial class Initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assignment2.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CategoryName")
                        .IsRequired();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("ImageURL");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Assignment2.Models.Customers", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<DateTime>("DateEntered");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.Property<string>("PostalCode");

                    b.Property<string>("State");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Assignment2.Models.OrderDetails", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<int>("IDSKU");

                    b.Property<int?>("OrderId");

                    b.Property<int>("OrderNumber");

                    b.Property<decimal>("Price");

                    b.Property<int?>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("Size");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Assignment2.Models.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustmerId");

                    b.Property<DateTime>("OrderDate");

                    b.Property<int?>("PaymentId");

                    b.Property<int?>("StatusId");

                    b.HasKey("OrderId");

                    b.HasIndex("CustmerId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("StatusId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Assignment2.Models.OrderStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrdersOrderId");

                    b.Property<string>("Status")
                        .IsRequired();

                    b.HasKey("StatusId");

                    b.HasIndex("OrdersOrderId");

                    b.ToTable("OrderStatus");
                });

            modelBuilder.Entity("Assignment2.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrdersOrderId");

                    b.Property<string>("PaymentType")
                        .IsRequired();

                    b.HasKey("PaymentId");

                    b.HasIndex("OrdersOrderId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Assignment2.Models.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Color");

                    b.Property<string>("ProductDescription");

                    b.Property<string>("ProductName")
                        .IsRequired();

                    b.Property<string>("ProductURL")
                        .IsRequired();

                    b.Property<int>("QuantityPerUnit");

                    b.Property<int>("ReorderLevel");

                    b.Property<string>("SKU");

                    b.Property<decimal>("Size");

                    b.Property<int?>("SuplierId");

                    b.Property<decimal>("UnitPrice");

                    b.Property<int>("UnitsInStock");

                    b.Property<int>("UnitsOnOrder");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SuplierId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Assignment2.Models.Suppliers", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .IsRequired();

                    b.Property<string>("URL");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Assignment2.Models.OrderDetails", b =>
                {
                    b.HasOne("Assignment2.Models.Orders", "OrderDate")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.HasOne("Assignment2.Models.Products", "ProductDetails")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("Assignment2.Models.Orders", b =>
                {
                    b.HasOne("Assignment2.Models.Customers", "FirstName")
                        .WithMany("Orders")
                        .HasForeignKey("CustmerId");

                    b.HasOne("Assignment2.Models.Payment", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentId");

                    b.HasOne("Assignment2.Models.OrderStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("Assignment2.Models.OrderStatus", b =>
                {
                    b.HasOne("Assignment2.Models.Orders")
                        .WithMany("OrderStatuses")
                        .HasForeignKey("OrdersOrderId");
                });

            modelBuilder.Entity("Assignment2.Models.Payment", b =>
                {
                    b.HasOne("Assignment2.Models.Orders")
                        .WithMany("Payments")
                        .HasForeignKey("OrdersOrderId");
                });

            modelBuilder.Entity("Assignment2.Models.Products", b =>
                {
                    b.HasOne("Assignment2.Models.Category", "CategoryName")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Assignment2.Models.Suppliers", "CompanyName")
                        .WithMany("Products")
                        .HasForeignKey("SuplierId");
                });
#pragma warning restore 612, 618
        }
    }
}
